\ стековые манипуляторы, расширенные операторами (для быстрого прототипирования и отладки программных модулей)
\ или фиксированно-именованные локальные переменные на стеке параметров

\ положить адрес выбранного самого нижнего параметра на стеке в регистр ESI 
: sset \ offset --
 0xF58B W,            \ MOV     ESI , EBP
 0xC683 W, C,         \ ADD     ESI , # offset
; 
\  положить ESI на стек возвратов
M: rs   RS=S          \ PUSH    ESI
;
\  снять со стека возвратов и положить в ESI
M: sr   S=RS          \ POP     ESI
;

\ положить выбранный параметр в EDX
: d=@s 
0x568B W, C,          \ MOV     EDX ,  n [ESI]
;
\ положить параметр из EDX в выбранную ячейку стека
: @s=d 
0x5689 W, C,          \ MOV     n [ESI] ,  EDX   
;
\ снять параметр с вершины стека в выбранную ячейку стека
: @s=a  \ n --
0x4689 W, C, 
0x458B W, 0x00 C, 
0x6D8D W, 0x4 C, 
;
: s@s=a \ n --
0x4689 W, C, 
; 
\ положить выбранный параметр на вершину стека
: a=@s  0x468B W, C,  \ MOV     EAX , n [ESI] 
;
I: o0x0 
0x6D8D W, C,          \ LEA     EBP , n [EBP] 
0x458B W, -4 C,       \ MOV     FC [EBP] , EAX
; 
I: o1x1 
0x6D8D W, C,          \ LEA     EBP , n [EBP] 
; 
I: o2x2 
0x5D8B W, 0x00 C,     \ MOV     EBX , 0 [EBP]
0x6D8D W, C,          \ LEA     EBP , n [EBP]
0x5D89 W, 0x00 C,     \ MOV     0 [EBP] , EBX
; 
I: o3x3 
0x5D8B W, 0x00 C,     \ MOV     EBX , 0 [EBP]
0x4D8B W, 0x04 C,     \ MOV     ECX , 4 [EBP]
0x6D8D W, C,          \ LEA     EBP , n [EBP]
0x5D89 W, 0x00 C,     \ MOV     0 [EBP] , EBX
0x4D89 W, 0x04 C,     \ MOV     4 [EBP] , ECX
; 
I: o4x4 
0x5D8B W, 0x00 C,     \ MOV     EBX , 0 [EBP]
0x4D8B W, 0x04 C,     \ MOV     ECX , 4 [EBP]
0x558B W, 0x08 C,     \ MOV     EDX , 8 [EBP]
0x6D8D W, C,          \ LEA     EBP , n [EBP]
0x5D89 W, 0x00 C,     \ MOV     0 [EBP] , EBX
0x4D89 W, 0x04 C,     \ MOV     4 [EBP] , ECX
0x5589 W, 0x08 C,     \ MOV     8 [EBP] , EDX
; 
I: n&  0x4623 W, C, ; 
I: n^  0x4633 W, C, ; 
I: n|  0x460B W, C, ; 
I: n+  0x4603 W, C, ; 
I: n-  0x462B W, C, ; 
I: n=  
0x4633 W, C, 
0xE883 W, 1 C, 
0xC01B W, 
; 
I: n#  
0x4633 W, C, 
0xD8F7 W, 
0xC01B W, 
;
I: n>  
0x463B W, C,
0x9D0F W, 0xC0 C,
0xE083 W, 1 C,
0x48   C,
0x6D8D W, 4 C,
; 
I: n<  
0x463B W, C,
0x9E0F W, 0xC0 C,
0xE083 W, 1 C,
0x48   C,
0x6D8D W, 4 C,
;
I: n*  
0x6EF7 W, C,
;
I: n/ 
0x4E8B W, C,          
0x99 C,             
0xF1F7 W, 
;
I: n%  
0x4E8B W, C,          
0x99 C,             
0xF1F7 W, 
0xC28B W,
;
I: nM  
0x463B W, C,
0xE37C W,     
0x6D8D W, 4 C,
;
I: nm  
0x463B W, C,
0xC77F W,
0x6D8D W, 4 C,
;

M: aDO   OVER + SWAP ?DO ;    \ макрос ( BOUND ?DO )
M: I+  ( n -- )  R@ + RP@ ! ; \ макрос: увеличить счетчик цикла на n со стека

: odin  1 ;
: hex   16 ;
: 4cell 32 ;
: kbyte 1024 ;
: mbyte 1048576 ;

: hAlloc  RS=S ALLOCATE THROW S=RS ;
: hFree   RS=S     FREE THROW S=RS ;
: hResize RS=S   RESIZE THROW S=RS ;

I: LAMBDA{ ( -- res xt ) 0 BRANCH, >MARK HERE ;
I: }LAMBDA ( res xt -- ) RET, >R >RESOLVE1 R> LIT, ;

I: FO ` OF ` ` ;  M: EF ENDOF ;

: conv-so   ui! ai! ai i!
  2000 ALLOCATE THROW ao! 2000 uo! ao o! ao uo ERASE
  i+( i 1+ is i )  s( o C! o 1+ is o )  
  BEGIN ''' s  i C@ i+ s i+ ''' s BL s 'F' s 'O' s BL s
        BEGIN i C@ BL > IF i C@ i+ s 0 ELSE i+ BL s 'E' s 'F' s BL s 1 THEN UNTIL
  i ai - ui >
  UNTIL ao o ao -
;
M: Move RS=S MOVE S=RS ;
: Search RS=S SEARCH S=RS ;
: ).(  RS=S . S=RS ;
M: Type RS=S TYPE S=RS ;
: Emit RS=S EMIT S=RS ;
: Cr RS=S CR S=RS ;
: Compare RS=S COMPARE S=RS ;

: S:  : IMMEDIATE load-str conv-so DLIT, ` EVALUATE ` ; ;

S: BaseOperators 
a ABS                      ! !          0 FALSE
b C@                       _ FILL       
c Emit                     $ ?DO        
d DUP                      % MOD        
e ELSE                     & AND        
f hFree                             
g CELL       H WITHIN               
h hAlloc     G aDO         * *          
i 1+         I I           + +          
j 1+!        J J           , LITERAL    
k KEY        K EKEY        - -
l LSHIFT     L LOOP        . ).(
m MIN        M MAX         / /
n NEGATE     N +LOOP       < <
o AGAIN      O BEGIN       = =
p DS>F       P DEPTH       > >
q Compare    Q LEAVE       ? IF
r RSHIFT     R REPEAT      @ @
s Search     S SPACES      # <>        
t THEN       T Type               
u hResize    U UNTIL       ^ XOR
v EVALUATE   V Move        \ Cr
w C!         W WHILE       { LAMBDA{
x DROP       X EXECUTE     | OR
y odin       Y TRUE        } }LAMBDA
z 0<>        Z 0=          ~ INVERT                                                                  
;                   
M: XOperators  ` LAMBDA{ I 1+ C@ CASE BaseOperators ENDCASE  ` }LAMBDA 1 I+  
;

: DOR     ( d1 d2 -- d3)  D=@P $ 8 Pa $ -4 A|@P @P|D ;
: DXOR    ( d1 d2 -- d3)  D=@P $ 8 Pa $ -4 A^@P @P^D ;
: DAND    ( d1 d2 -- d3)  D=@P $ 8 Pa $ -4 A&@P @P&D ;
: DINVERT ( d1 -- d2 )    @P~ A~ ;
: DLSHIFT ( d n -- 'd ) $ 4 D=@P $ 20 C=# C-A D>> C=A @P<< $ 4 @P<< @P|D DROP ;
: DRSHIFT ( d n -- 'd ) D=@P $ 20 C=# C-A D<< C=A @P>> $ 4 @P>> $ 4 @P|D DROP ;
: D0<>    ( d -- f ) D0= INVERT ;
: 1-! ( addr --)   @A-- DROP ;
: Dodin 1. ;
: Dnull 0. ;
: n.0b ( n -- ) 2 BASE ! .0 DECIMAL ;
: n.0h ( n -- ) HEX .0 DECIMAL ;
: .BL ( n -- ) >R 0 <# #S #> R> OVER - 0 MAX DUP IF 0 DO BL EMIT LOOP ELSE DROP THEN TYPE ;
: sqrt ( n -- sqrt )  $ -4 @P=A $ -4 0=@P 0SQRT $ -4 @P=0- $ -4 A=@P ;

\ символы с префиксом " 
S: DOperators 
a DABS       Z D0=         ! 2!         0 Dnull
b W@                       & DAND        
d 2DUP                     + D+          
g 4cell                    , 2LITERAL    
l DLSHIFT                  - D-         
n DNEGATE                  . D.         
r DRSHIFT                  < D<         
w W!                       = D=         
x 2DROP                    > D>         
y Dodin                    @ 2@         
z D0<>                     ^ DXOR
                           | DOR
                           ~ DINVERT
;
S: SaveOperators 
0 o0x0  1 o1x1  2 o2x2  3 o3x3  4 o4x4 
;
S: OptOperators 
^ n^  & n&  | n|  + n+  - n-  * n*  / n/  
% n%  = n=  # n#  > n>  < n<  M nM  m nm 
; 
: zifra1 1 ; : zifra6 6  ; : zifraB 11 ; 
: zifra2 2 ; : zifra7 7  ; : zifraC 12 ; 
: zifra3 3 ; : zifra8 8  ; : zifraD 13 ; 
: zifra4 4 ; : zifra9 9  ; : zifraE 14 ; 
: zifra5 5 ; : zifraA 10 ; : zifraF 15 ; 

S: Numbers
1 zifra1       6 zifra6      B zifraB           
2 zifra2       7 zifra7      C zifraC   
3 zifra3       8 zifra8      D zifraD   
4 zifra4       9 zifra9      E zifraE   
5 zifra5       A zifraA      F zifraF
;
: CinStr { s a u -- tf }  
  0 a u + a DO I C@ s = IF DROP TRUE LEAVE THEN LOOP 
;
: 1@P=A          0x4589 W, 0xFC C, ;   	\ MOV     FC [EBP] , EAX
: s@P=A=n@S ( s n -- )
                 0x468B W, C,          	\ MOV     EAX ,  n [ESI] 
                 0x4589 W, C,      ;   	\ MOV     s [EBP] , EAX
: s@P=A ( s -- ) 0x4589 W, C,      ;   	\ MOV     s [EBP] , EAX
: A=n@S ( n -- ) 0x468B W, C,      ;   	\ MOV     EAX ,  n [ESI] 
: sPa   ( s -- ) 0x6D8D W, C,      ;   	\ LEA     EBP ,  s [EBP]
: 1Pa            0x6D8D W, 0xFC C, ;   	\ LEA     EBP , FC [EBP]
  
USER-VALUE XNST 0 TO XNST
: NOTFOUND { a u  \ s } -4 TO s
d?( 49 58 WITHIN )            h?( 65 71 WITHIN )
PDS( d? IF '0' ELSE '7' THEN - )    offs( 1 - -4 * )   
p?( C@ DUP d? >R h? R> OR )                  \ параметр
np?( C@ DUP d? >R h? R> OR 0= )              \ не параметр
pds0[ I    C@ I C@    PDS ]                  \ номер ячейки на 1й позиции
pds1[ I 1+ C@ I 1+ C@ PDS ]                  \ номер ячейки на 2й позиции
pds2[ I 2+ C@ I 2+ C@ PDS ]                  \ номер ячейки на 3й позиции
  
\ анализ наборов последовательностей символов - генератор событий
   b?[ I p? 0x5B   I 1+ C@ =  AND 1 AND ]                                                 		\ установка указателя на начальную ячейку стека
  p:?[ I p? 0x3A   I 1+ C@ =  AND 2 AND OR ]                                              		\ присвоить значение ячейке из ячейки
  :p?[ 0x3A I C@ = I 1+ p?    AND 3 AND OR ]                                              		\ снять значение со стека в ячейку  
   e?[ 0x5D I C@ = I 1+ p?    AND 4 AND OR ]                                              		\ оставить заданное число параметров на стеке
  "o?[ 0x22 I C@ = I 1+ p? 0= AND 5 AND OR ]                                              		\ оператор из набора двойной разрядности
  xo?[ 0x27 I C@ = I 1+ p? 0= AND 6 AND OR ]                                              		\ дать адрес оператора основного набора 
  zp?[ 0x60 I C@ = I 1+ p?    AND 7 AND OR ]								\ дать число по символу цифры
 p1e?[ I 1- np? I p? AND I a u + 1- =  34 I 1+ C@ = 39 I 1+ C@ = OR 96 I 1+ C@ = OR 
       I 1+ C@ S" abcdefghijklnopqrstuvwxyzGHIJKLNOPQRSTUVWXYZ!_$,.\?@{}~0]" CinStr OR
         OR AND 8 AND OR ]             									\ единственный параметр последний
p1pe?[ I 1- np? I p? AND I 1+ p? AND I 1+ a u + 1- = I 2+ C@ 34 = I 2+ C@ 39 = OR I 2+ C@ 96 = OR 
       I 2+ C@ S" abcdefghijklnopqrstuvwxyzGHIJKLNOPQRSTUVWXYZ!_$,.\?@{}~0]" CinStr OR
       OR AND 9 AND OR ] 										\ первый и второй последние пар-ры
 p1p?[ I 1- np? I p? AND I 1+ p? AND I 2+ p? AND 10 AND OR ]                              		\ первые три параметра не последние
  pp?[ I 1- p?  I p? AND I 1+ p? AND 11 AND OR ]                                          		\ два параметра не первые и не последние
 ppe?[ I 1- p?  I p? AND I a u + 1- = I 1+ C@ 34 = I 1+ C@ 39 = OR I 1+ C@ 96 = OR 
       I 1+ C@ S" abcdefghijklnopqrstuvwxyzGHIJKLNOPQRSTUVWXYZ!_$,.\?@{}~0]" CinStr OR
       OR AND 12 AND OR ]                								\ последние два параметра не первые  
 p1O?[ I 1- np? I p? AND I 1+ C@  S" +-*/%=><#mM^|&"  CinStr AND 13 AND OR ]              		\ первый пар-р с 2х оп-м оператором
p1pO?[ I 1- np? I p? AND I 1+ p? AND I 2+ C@  S" +-*/%=><#mM^|&"  CinStr AND 14 AND OR ]  		\ первые 2 пар-ра с -/-
  pO?[ I 1- p? I p? AND I 1+ C@  S" +-*/%=><#mM^|&"  CinStr AND 15 AND OR ]               		\ единственный посл-й пар-р с -/-
   o?[ I C@ S" abcdefghijklnopqrstuvwxyzGHIJKLNOPQRSTUVWXYZ!_$,.\?@{}~0+-*/%=><#mM^|&" CinStr 16 AND OR ]

a  C@ '/' = u 1 > AND 0= IF a u NOTFOUND EXIT THEN
a u + a 1+
?DO     \ I a - . ." s:"  I C@ EMIT SPACE  CR
b?`     \  ." b?    " DUP . \ 1     \
p:?`    \  ." p:?   " DUP . \ 2     \
:p?`    \  ." :p?   " DUP . \ 3     \
e?`     \  ." e?    " DUP . \ 4     \
"o?`    \  ." o?    " DUP . \ 5     \
xo?`    \  ." xo?   " DUP . \ 6     \
zp?`    \  ." zp?   " DUP . \ 7     \
p1e?`   \  ." p1e?  " DUP . \ 8     \
p1pe?`  \  ." p1pe? " DUP . \ 9     \
p1p?`   \  ." p1p?  " DUP . \ 10    \
ppe?`   \  ." ppe?  " DUP . \ 11    \
pp?`    \  ." pp?   " DUP . \ 12    \
p1O?`   \  ." p1O?  " DUP . \ 13    \
p1pO?`  \  ." p1pO? " DUP . \ 14    \
pO?`    \  ." pO?   " DUP . \ 15    \
o?`     \  ." o?    " DUP . \ 16    \  
\ обработчики событий 
."  i" I a - 2 .0 SPACE I C@ EMIT SPACE ." e" DUP 2 .0 SPACE CR
CASE 
1  OF ." b " CR pds0` TO XNST XNST 2- 4 * sset 1 I+  ENDOF 							\ +
2  OF ." p: " CR pds0` XNST < pds2` XNST < AND                          					\ +
      IF   pds0` offs d=@s pds2` offs @s=d  
      ELSE pds0` XNST = IF pds2` offs s@s=a ELSE pds0` offs a=@s THEN                                                           
      THEN 2 I+
   ENDOF
3  OF ." :p " CR pds1` offs @s=a 1 I+  ENDOF 									\ +
4  OF ." e "  CR XNST 4 * I 1+ C@ CASE SaveOperators ENDCASE 0 TO XNST 1 I+  ENDOF
5  OF ." do " CR I 1+ C@ CASE DOperators  ENDCASE 1 I+ ENDOF
6  OF ." xo " CR I 1+ C@ CASE XOperators  ENDCASE ( 1 I+ ) ENDOF
7  OF ." zp " CR I 1+ C@ CASE Numbers     ENDCASE 1 I+ ENDOF                                          		\ +

8  OF ." p1e "  CR   1@P=A pds0` offs A=n@S 1Pa  -4 TO s ENDOF                                        		\ +
9  OF ." p1pe " CR   1@P=A s -4 + pds0` offs s@P=A=n@S pds1` offs A=n@S s -4 + sPa 1 I+ -4 TO s ENDOF 		\ +
10 OF ." p1p "  CR   1@P=A pds0` offs A=n@S    s -4 + TO s ENDOF 	                              		\ +
11 OF ." pp "   CR s s@P=A pds0` offs A=n@S    s -4 + TO s ENDOF  	                              		\ +
12 OF ." ppe "  CR s s@P=A pds0` offs A=n@S  s sPa -4 TO s ENDOF	                              		\ +

13 OF ." p1O "  CR 1@P=A pds0` offs                  I 1+ C@ CASE OptOperators ENDCASE 1Pa 1 I+ -4 TO s ENDOF 	\ +
14 OF ." p1pO " CR 1@P=A pds0` offs A=n@S pds1` offs I 2+ C@ CASE OptOperators ENDCASE 1Pa 2 I+ -4 TO s ENDOF 	\ +
15 OF ." pO " CR pds0` offs I 1+ C@ CASE OptOperators ENDCASE s 4 + sPa 1 I+ -4 TO s ENDOF                    	\ +
16 OF ." o " CR I C@ CASE BaseOperators  0x3B OF EXIT ENDOF ENDCASE ENDOF
ENDCASE
LOOP
;





